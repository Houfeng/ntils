{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ntils.js","webpack:///webpack/bootstrap 08db391225ded9020a04","webpack:///./src/index.js","webpack:///./src/utils.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_utils","utils","obj","newObj","key","default","noop","toString","getType","exec","isNull","type","trim","str","replace","str1","str2","RegExp","startWith","indexOf","contains","endWith","length","has","isFunction","isString","isNumber","isBoolean","isElement","window","Element","tagName","nodeType","nodeName","attributes","ownerDocument","isText","Text","isObject","isArray","v1","v2","Array","v3","splice","v4","isDate","val","Date","isRegexp","toArray","array","slice","toDate","self","each","list","handler","scope","listLength","rs","formatDate","date","format","dict","placeholder","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","s+","getSeconds","w+","getDay","q+","Math","floor","S","getMilliseconds","test","$1","getFullYear","substr","value","copy","src","dst","igonres","getOwnPropertyDescriptor","ex","clone","objClone","constructor","forEach","defineFreezeProp","mix","mode","igonreNull","keys","writable","err","push","create","proto","props","Cotr","setPrototypeOf","__proto__","getPrototypeOf","deepEqual","a","b","aKeys","bKeys","allKeys","concat","checkedMap","result","fromTo","fromNum","toNum","step","abs","newGuid","s4","random","substring","map","fn","buffer","setByPath","path","split","index","getByPath","unique","newArray","getFunctionArgumentNames","parts","filter","short","maxLength","strLength","trimLength","firstUpper","toUpperCase","escapeRegExp","parseDom","_NTILS_PARSE_DOM_","document","createElement","innerHTML","firstNode","childNodes","cloneNode","hasProperty"],"mappings":"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H,OAAO2H,kBAAkBG,UAAY/I,EAAKC,EAC1C,IAAI+I,GAAY/H,OAAO2H,kBAAkBK,WAAW,EAKpD,OAFID,KAAWA,EAAYA,EAAUE,WAAU,IAC/CjI,OAAO2H,kBAAkBG,UAAY,GAC9BC,EH3jBT3L,EAAQwB,YAAa,EACrBxB,EGlGgBqC,OHmGhBrC,EGjGgBsC,WHkGhBtC,EG9FgBuC,UH+FhBvC,EGnFgByC,SHoFhBzC,EGxEgB2C,OHyEhB3C,EGxDgB6C,UHyDhB7C,EG5CgBiD,YH6ChBjD,EGhCgBmD,WHiChBnD,EGnBgBoD,UHoBhBpD,EGPgBsD,MHQhBtD,EGKgBuD,aHJhBvD,EGgBgBwD,WHfhBxD,EG2BgByD,WH1BhBzD,EGsCgB0D,YHrChB1D,EGiDgB2D,YHhDhB3D,EGkEgBmE,SHjEhBnE,EG6EgBqE,WH5EhBrE,EGyFgBsE,UHxFhBtE,EGwGgB6E,SHvGhB7E,EGmHgBgF,WHlHhBhF,EG6HgBiF,UH5HhBjF,EGwIgBoF,SHvIhBpF,EG2JgBsF,OH1JhBtF,EGmLgB4F,aHlLhB5F,EGwNgBuH,OHvNhBvH,EGiPgB6H,QHhPhB7H,EGqRgBkI,MHpRhBlI,EGyTgBiI,mBHxThBjI,EGwUgBqI,OHvUhBrI,EGmVgByI,SHlVhBzI,EGgWgB6I,iBH/VhB7I,EG2WgB+I,iBH1WhB/I,EGmXgBgJ,YHlXhBhJ,EG2YgByJ,SH1YhBzJ,EG0ZgB8J,UHzZhB9J,EGoagBkK,MHnahBlK,EG8agBqK,YH7ahBrK,EGkcgByK,YHjchBzK,EGkdgB0K,SHjdhB1K,EG8dgB4K,2BH7dhB5K,EG2egB+K,QH1ehB/K,EGufgBmL,aHtfhBnL,EG8fgBqL,eH7fhBrL,EGsgBgBsL,UA3iBLQ,eAAcxI","file":"./ntils.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ntils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ntils\"] = factory();\n\telse\n\t\troot[\"ntils\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ntils\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ntils\"] = factory();\n\telse\n\t\troot[\"ntils\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports.__esModule = true;\n\nvar _utils = __webpack_require__(2);\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.default = utils;\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nexports.__esModule = true;\nexports.noop = noop;\nexports.toString = toString;\nexports.getType = getType;\nexports.isNull = isNull;\nexports.trim = trim;\nexports.replace = replace;\nexports.startWith = startWith;\nexports.contains = contains;\nexports.endWith = endWith;\nexports.has = has;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isNumber = isNumber;\nexports.isBoolean = isBoolean;\nexports.isElement = isElement;\nexports.isText = isText;\nexports.isObject = isObject;\nexports.isArray = isArray;\nexports.isDate = isDate;\nexports.isRegexp = isRegexp;\nexports.toArray = toArray;\nexports.toDate = toDate;\nexports.each = each;\nexports.formatDate = formatDate;\nexports.copy = copy;\nexports.clone = clone;\nexports.mix = mix;\nexports.defineFreezeProp = defineFreezeProp;\nexports.keys = keys;\nexports.create = create;\nexports.setPrototypeOf = setPrototypeOf;\nexports.getPrototypeOf = getPrototypeOf;\nexports.deepEqual = deepEqual;\nexports.fromTo = fromTo;\nexports.newGuid = newGuid;\nexports.map = map;\nexports.setByPath = setByPath;\nexports.getByPath = getByPath;\nexports.unique = unique;\nexports.getFunctionArgumentNames = getFunctionArgumentNames;\nexports.short = short;\nexports.firstUpper = firstUpper;\nexports.escapeRegExp = escapeRegExp;\nexports.parseDom = parseDom;\n\n/**\n * 空函数\n */\nfunction noop() {};\n\nfunction toString(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction getType(obj) {\n  var str = toString(obj);\n  return (/^\\[object (.+)\\]$/i.exec(str)[1]\n  );\n}\n\n/**\n * 验证一个对象是否为NULL\n * @method isNull\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isNull(obj) {\n  var type = getType(obj);\n  return type === 'Undefined' || type === 'Null';\n};\n\n/**\n * 除去字符串两端的空格\n * @method trim\n * @param  {String} str 源字符串\n * @return {String}     结果字符串\n * @static\n */\nfunction trim(str) {\n  if (isNull(str)) return str;\n  if (str.trim) {\n    return str.trim();\n  } else {\n    return str.replace(/(^[\\\\s]*)|([\\\\s]*$)/g, \"\");\n  }\n};\n\n/**\n * 替换所有\n * @method replace\n * @param {String} str 源字符串\n * @param {String} str1 要替换的字符串\n * @param {String} str2 替换为的字符串\n * @static\n */\nfunction replace(str, str1, str2) {\n  if (isNull(str)) return str;\n  return str.replace(new RegExp(str1, 'g'), str2);\n};\n\n/**\n * 从字符串开头匹配\n * @method startWith\n * @param {String} str1 源字符串\n * @param {String} str2 要匹配的字符串\n * @return {Boolean} 匹配结果\n * @static\n */\nfunction startWith(str1, str2) {\n  if (isNull(str1) || isNull(str2)) return false;\n  return str1.indexOf(str2) === 0;\n};\n\n/**\n * 是否包含\n * @method contains\n * @param {String} str1 源字符串\n * @param {String} str2 检查包括字符串\n * @return {Boolean} 结果\n * @static\n */\nfunction contains(str1, str2) {\n  var self = this;\n  if (isNull(str1) || isNull(str2)) return false;\n  return str1.indexOf(str2) > -1;\n};\n\n/**\n * 从字符串结束匹配\n * @method endWidth\n * @param {String} str1 源字符串\n * @param {String} str2 匹配字符串\n * @return {Boolean} 匹配结果\n * @static\n */\nfunction endWith(str1, str2) {\n  if (isNull(str1) || isNull(str2)) return false;\n  return str1.indexOf(str2) === str1.length - str2.length;\n};\n\n/**\n * 是否包含属性\n * @method hasProperty\n * @param  {Object}  obj  对象\n * @param  {String}  name 属性名\n * @return {Boolean}      结果\n * @static\n */\nfunction has(obj, name) {\n  if (isNull(obj) || isNull(name)) return false;\n  return name in obj || obj.hasOwnProperty(name);\n};\nvar hasProperty = exports.hasProperty = has;\n\n/**\n * 验证一个对象是否为Function\n * @method isFunction\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isFunction(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === \"Function\";\n};\n\n/**\n * 验证一个对象是否为String\n * @method isString\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isString(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === 'String';\n};\n\n/**\n * 验证一个对象是否为Number\n * @method isNumber\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isNumber(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === 'Number';\n};\n\n/**\n * 验证一个对象是否为Boolean\n * @method isBoolean\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isBoolean(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === 'Boolean';\n};\n\n/**\n * 验证一个对象是否为HTML Element\n * @method isElement\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isElement(obj) {\n  if (isNull(obj)) return false;\n  if (window.Element) {\n    return obj instanceof Element;\n  } else {\n    return obj.tagName && obj.nodeType && obj.nodeName && obj.attributes && obj.ownerDocument;\n  }\n};\n\n/**\n * 验证一个对象是否为HTML Text Element\n * @method isText\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isText(obj) {\n  if (isNull(obj)) return false;\n  return obj instanceof Text;\n};\n\n/**\n * 验证一个对象是否为Object\n * @method isObject\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isObject(obj) {\n  if (isNull(obj)) return false;\n  var type = getType(obj);\n  return type === 'Object' || type === 'Array';\n};\n\n/**\n * 验证一个对象是否为Array或伪Array\n * @method isArray\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nfunction isArray(obj) {\n  if (isNull(obj)) return false;\n  var v1 = getType(obj) === 'Array';\n  var v2 = obj instanceof Array;\n  var v3 = !isString(obj) && isNumber(obj.length) && isFunction(obj.splice);\n  var v4 = !isString(obj) && isNumber(obj.length) && obj[0];\n  return v1 || v2 || v3 || v4;\n};\n\n/**\n * 验证是不是一个日期对象\n * @method isDate\n * @param {Object} val   要检查的对象\n * @return {Boolean}           结果\n * @static\n */\nfunction isDate(val) {\n  if (isNull(val)) return false;\n  return val instanceof Date;\n};\n\n/**\n * 验证是不是一个正则对象\n * @method isDate\n * @param {Object} val   要检查的对象\n * @return {Boolean}           结果\n * @static\n */\nfunction isRegexp(val) {\n  return val instanceof RegExp;\n};\n\n/**\n * 转换为数组\n * @method toArray\n * @param {Array|Object} array 伪数组\n * @return {Array} 转换结果数组\n * @static\n */\nfunction toArray(array) {\n  if (isNull(array)) return [];\n  return Array.prototype.slice.call(array);\n};\n\n/**\n * 转为日期格式\n * @method toDate\n * @param {Number|String} val 日期字符串或整型数值\n * @return {Date} 日期对象\n * @static\n */\nfunction toDate(val) {\n  var self = this;\n  if (self.isNumber(val)) return new Date(val);else if (self.isString(val)) return new Date(self.replace(self.replace(val, '-', '/'), 'T', ' '));else if (self.isDate(val)) return val;else return null;\n};\n\n/**\n * 遍历一个对像或数组\n * @method each\n * @param  {Object or Array}   obj  要遍历的数组或对象\n * @param  {Function} fn            处理函数\n * @return {void}                   无返回值\n * @static\n */\nfunction each(list, handler, scope) {\n  if (isNull(list) || isNull(handler)) return;\n  if (isArray(list)) {\n    var listLength = list.length;\n    for (var i = 0; i < listLength; i++) {\n      var rs = handler.call(scope || list[i], i, list[i]);\n      if (!isNull(rs)) return rs;\n    }\n  } else {\n    for (var key in list) {\n      var rs = handler.call(scope || list[key], key, list[key]);\n      if (!isNull(rs)) return rs;\n    }\n  }\n};\n\n/**\n * 格式化日期\n * @method formatDate\n * @param {Date|String|Number} date 日期\n * @param {String} format 格式化字符串\n * @param {object} dict 反译字典\n * @return {String} 格式化结果\n * @static\n */\nfunction formatDate(date, format, dict) {\n  if (isNull(format) || isNull(date)) return date;\n  date = toDate(date);\n  dict = dict || {};\n  var placeholder = {\n    \"M+\": date.getMonth() + 1, //month\n    \"d+\": date.getDate(), //day\n    \"h+\": date.getHours(), //hour\n    \"m+\": date.getMinutes(), //minute\n    \"s+\": date.getSeconds(), //second\n    \"w+\": date.getDay(), //week\n    \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\n    \"S\": date.getMilliseconds() //millisecond\n  };\n  if (/(y+)/.test(format)) {\n    format = format.replace(RegExp.$1, (date.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n  }\n  for (var key in placeholder) {\n    if (new RegExp(\"(\" + key + \")\").test(format)) {\n      var value = placeholder[key];\n      value = dict[value] || value;\n      format = format.replace(RegExp.$1, RegExp.$1.length == 1 ? value : (\"00\" + value).substr((\"\" + value).length));\n    }\n  }\n  return format;\n};\n\n/**\n * 拷贝对象\n * @method copy\n * @param {Object} src 源对象\n * @param {Object} dst 目标对象\n * @static\n */\nfunction copy(src, dst, igonres) {\n  dst = dst || (isArray(src) ? [] : {});\n  each(src, function (key) {\n    if (igonres && igonres.indexOf(key) > -1) return;\n    delete dst[key];\n    if (Object.getOwnPropertyDescriptor) {\n      try {\n        Object.defineProperty(dst, key, Object.getOwnPropertyDescriptor(src, key));\n      } catch (ex) {\n        dst[key] = src[key];\n      }\n    } else {\n      dst[key] = src[key];\n    }\n  });\n  return dst;\n};\n\n/**\n * 深度克隆对象\n * @method clone\n * @param {Object} src 源对象\n * @return {Object} 新对象\n * @static\n */\nfunction clone(src, igonres) {\n  if (isNull(src) || isString(src) || isNumber(src) || isBoolean(src) || isDate(src)) {\n    return src;\n  }\n  var objClone = src;\n  try {\n    objClone = new src.constructor();\n  } catch (ex) {}\n  each(src, function (key, value) {\n    if (objClone[key] != value && !contains(igonres, key)) {\n      if (isObject(value)) {\n        objClone[key] = clone(value, igonres);\n      } else {\n        objClone[key] = value;\n      }\n    }\n  }, this);\n  ['toString', 'valueOf'].forEach(function (key) {\n    if (contains(igonres, key)) return;\n    defineFreezeProp(objClone, key, src[key]);\n  }, this);\n  return objClone;\n};\n\n/**\n * 合并对象\n * @method mix\n * @return 合并后的对象\n * @param {Object} dst 目标对象\n * @param {Object} src 源对象\n * @param {Array} igonres 忽略的属性名,\n * @param {Number} mode 模式\n */\nfunction mix(dst, src, igonres, mode, igonreNull) {\n  //根据模式来判断，默认是Obj to Obj的  \n  if (mode) {\n    switch (mode) {\n      case 1:\n        // proto to proto  \n        return mix(dst.prototype, src.prototype, igonres, 0);\n      case 2:\n        // object to object and proto to proto  \n        mix(dst.prototype, src.prototype, igonres, 0);\n        break; // pass through  \n      case 3:\n        // proto to static  \n        return mix(dst, src.prototype, igonres, 0);\n      case 4:\n        // static to proto  \n        return mix(dst.prototype, src, igonres, 0);\n      default: // object to object is what happens below  \n    }\n  }\n  //---\n  src = src || {};\n  dst = dst || (isArray(src) ? [] : {});\n  keys(src).forEach(function (key) {\n    if (contains(igonres, key)) return;\n    if (igonreNull && isNull(src[key])) return;\n    if (isObject(src[key]) && (src[key].constructor == Object || src[key].constructor == Array || src[key].constructor == null)) {\n      dst[key] = mix(dst[key], src[key], igonres, 0, igonreNull);\n    } else {\n      dst[key] = src[key];\n    }\n  }, this);\n  return dst;\n};\n\n/**\n * 定义不可遍历的属性\n **/\nfunction defineFreezeProp(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      value: value,\n      enumerable: false,\n      configurable: true, //能不能重写定义\n      writable: false //能不能用「赋值」运算更改\n    });\n  } catch (err) {\n    obj[name] = value;\n  }\n};\n\n/**\n * 获取所有 key \n */\nfunction keys(obj) {\n  if (Object.keys) return Object.keys(obj);\n  var keys = [];\n  each(obj, function (key) {\n    keys.push(key);\n  });\n  return keys;\n};\n\n/**\n * 创建一个对象\n */\nfunction create(proto, props) {\n  if (Object.create) return Object.create(proto, props);\n  function Cotr() {};\n  Cotr.prototype = proto;\n  var obj = new Cotr();\n  if (props) copy(props, obj);\n  return obj;\n};\n\n/**\n * 设置 proto\n * 在不支持 setPrototypeOf 也不支持 __proto__ 的浏览器\n * 中，会采用 copy 方式\n */\nfunction setPrototypeOf(obj, proto) {\n  if (Object.setPrototypeOf) {\n    return Object.setPrototypeOf(obj, proto || create(null));\n  } else {\n    if (!('__proto__' in Object)) copy(proto, obj);\n    obj.__proto__ = proto;\n  }\n};\n\n/**\n * 获取 proto\n */\nfunction getPrototypeOf(obj) {\n  if (obj.__proto__) return obj.__proto__;\n  if (Object.getPrototypeOf) return Object.getPrototypeOf(obj);\n  if (obj.constructor) return obj.constructor.prototype;\n};\n\n/**\n * 是否深度相等\n */\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n  if (!isObject(a) || !isObject(b)) return false;\n  var aKeys = keys(a);\n  var bKeys = keys(b);\n  if (aKeys.length !== bKeys.length) return false;\n  var allKeys = aKeys.concat(bKeys);\n  var checkedMap = create(null);\n  var result = true;\n  each(allKeys, function (i, key) {\n    if (checkedMap[key]) return;\n    if (!deepEqual(a[key], b[key])) result = false;\n    checkedMap[key] = true;\n  }, this);\n  return result;\n};\n\n/**\n * 从一个数值循环到别一个数\n * @param {number} fromNum 开始数值\n * @param {Number} toNum 结束数值\n * @param {Number} step 步长值\n * @param {function} handler 执行函数\n * @returns {void} 无返回\n */\nfunction fromTo(fromNum, toNum, step, handler) {\n  if (!handler) handler = [step, step = handler][0];\n  step = Math.abs(step || 1);\n  if (fromNum < toNum) {\n    for (var i = fromNum; i <= toNum; i += step) {\n      handler(i);\n    }\n  } else {\n    for (var i = fromNum; i >= toNum; i -= step) {\n      handler(i);\n    }\n  }\n};\n\n/**\n * 生成一个Guid\n * @method newGuid\n * @return {String} GUID字符串\n * @static\n */\nfunction newGuid() {\n  function s4() {\n    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n  };\n  return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n};\n\n/**\n * 对象变换\n **/\nfunction map(list, fn) {\n  var buffer = isArray(list) ? [] : {};\n  each(list, function (name, value) {\n    buffer[name] = fn(name, value);\n  });\n  return buffer;\n};\n\n/**\n * 通过路径设置属性值\n */\nfunction setByPath(obj, path, value) {\n  if (isNull(obj) || isNull(path) || path === '') {\n    return;\n  }\n  if (!isArray(path)) {\n    path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n  }\n  each(path, function (index, name) {\n    if (isNull(name) || name.length < 1) return;\n    if (index === path.length - 1) {\n      obj[name] = value;\n    } else {\n      obj[name] = obj[name] || {};\n      obj = obj[name];\n    }\n  }, this);\n};\n\n/**\n * 通过路径获取属性值\n */\nfunction getByPath(obj, path) {\n  if (isNull(obj) || isNull(path) || path === '') {\n    return obj;\n  }\n  if (!isArray(path)) {\n    path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n  }\n  each(path, function (index, name) {\n    if (isNull(name) || name.length < 1) return;\n    if (!isNull(obj)) obj = obj[name];\n  }, this);\n  return obj;\n};\n\n/**\n * 数组去重\n **/\nfunction unique(array) {\n  if (isNull(array)) return array;\n  var newArray = [];\n  each(array, function (i, value) {\n    if (newArray.indexOf(value) > -1) return;\n    newArray.push(value);\n  });\n  return newArray;\n};\n\n/**\n * 解析 function 的参数列表\n **/\nfunction getFunctionArgumentNames(fn) {\n  if (!fn) return [];\n  var src = fn.toString();\n  var parts = src.split(')')[0].split('=>')[0].split('(');\n  return (parts[1] || parts[0]).split(',').map(function (name) {\n    return name.trim();\n  }).filter(function (name) {\n    return name != 'function';\n  });\n};\n\n/**\n * 缩短字符串\n */\nfunction short(str, maxLength) {\n  if (!str) return str;\n  maxLength = maxLength || 40;\n  var strLength = str.length;\n  var trimLength = maxLength / 2;\n  return strLength > maxLength ? str.substr(0, trimLength) + '...' + str.substr(strLength - trimLength) : str;\n};\n\n/**\n * 首字母大写\n */\nfunction firstUpper(str) {\n  if (isNull(str)) return;\n  return str.substring(0, 1).toUpperCase() + str.substring(1);\n};\n\n/**\n * 编码正则字符串\n */\nfunction escapeRegExp(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\n/**\n * 解析字符串为 dom \n * @param {string} str 字符串\n * @returns {HTMLNode} 解析后的 DOM \n */\nfunction parseDom(str) {\n  window._NTILS_PARSE_DOM_ = window._NTILS_PARSE_DOM_ || document.createElement('div');\n  window._NTILS_PARSE_DOM_.innerHTML = trim(str);\n  var firstNode = window._NTILS_PARSE_DOM_.childNodes[0];\n  //先 clone 一份再通过 innerHTML 清空\n  //否则 IE9 下，清空时会导不通过返回的 DOM 没有子结点\n  if (firstNode) firstNode = firstNode.cloneNode(true);\n  window._NTILS_PARSE_DOM_.innerHTML = '';\n  return firstNode;\n};\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ntils.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 08db391225ded9020a04","import * as utils from './utils';\n\nexport default utils;\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\n/**\n * 空函数\n */\nexport function noop() { };\n\nexport function toString(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nexport function getType(obj) {\n  var str = toString(obj);\n  return (/^\\[object (.+)\\]$/i.exec(str))[1];\n}\n\n/**\n * 验证一个对象是否为NULL\n * @method isNull\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isNull(obj) {\n  var type = getType(obj);\n  return type === 'Undefined' || type === 'Null';\n};\n\n/**\n * 除去字符串两端的空格\n * @method trim\n * @param  {String} str 源字符串\n * @return {String}     结果字符串\n * @static\n */\nexport function trim(str) {\n  if (isNull(str)) return str;\n  if (str.trim) {\n    return str.trim();\n  } else {\n    return str.replace(/(^[\\\\s]*)|([\\\\s]*$)/g, \"\");\n  }\n};\n\n/**\n * 替换所有\n * @method replace\n * @param {String} str 源字符串\n * @param {String} str1 要替换的字符串\n * @param {String} str2 替换为的字符串\n * @static\n */\nexport function replace(str, str1, str2) {\n  if (isNull(str)) return str;\n  return str.replace(new RegExp(str1, 'g'), str2);\n};\n\n/**\n * 从字符串开头匹配\n * @method startWith\n * @param {String} str1 源字符串\n * @param {String} str2 要匹配的字符串\n * @return {Boolean} 匹配结果\n * @static\n */\nexport function startWith(str1, str2) {\n  if (isNull(str1) || isNull(str2)) return false;\n  return str1.indexOf(str2) === 0;\n};\n\n/**\n * 是否包含\n * @method contains\n * @param {String} str1 源字符串\n * @param {String} str2 检查包括字符串\n * @return {Boolean} 结果\n * @static\n */\nexport function contains(str1, str2) {\n  var self = this;\n  if (isNull(str1) || isNull(str2)) return false;\n  return str1.indexOf(str2) > -1;\n};\n\n/**\n * 从字符串结束匹配\n * @method endWidth\n * @param {String} str1 源字符串\n * @param {String} str2 匹配字符串\n * @return {Boolean} 匹配结果\n * @static\n */\nexport function endWith(str1, str2) {\n  if (isNull(str1) || isNull(str2)) return false;\n  return str1.indexOf(str2) === (str1.length - str2.length);\n};\n\n/**\n * 是否包含属性\n * @method hasProperty\n * @param  {Object}  obj  对象\n * @param  {String}  name 属性名\n * @return {Boolean}      结果\n * @static\n */\nexport function has(obj, name) {\n  if (isNull(obj) || isNull(name)) return false;\n  return (name in obj) || (obj.hasOwnProperty(name));\n};\nexport var hasProperty = has;\n\n/**\n * 验证一个对象是否为Function\n * @method isFunction\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isFunction(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === \"Function\";\n};\n\n/**\n * 验证一个对象是否为String\n * @method isString\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isString(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === 'String';\n};\n\n/**\n * 验证一个对象是否为Number\n * @method isNumber\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isNumber(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === 'Number';\n};\n\n/**\n * 验证一个对象是否为Boolean\n * @method isBoolean\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isBoolean(obj) {\n  if (isNull(obj)) return false;\n  return getType(obj) === 'Boolean';\n};\n\n/**\n * 验证一个对象是否为HTML Element\n * @method isElement\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isElement(obj) {\n  if (isNull(obj)) return false;\n  if (window.Element) {\n    return obj instanceof Element;\n  } else {\n    return (obj.tagName && obj.nodeType &&\n      obj.nodeName && obj.attributes &&\n      obj.ownerDocument);\n  }\n};\n\n/**\n * 验证一个对象是否为HTML Text Element\n * @method isText\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isText(obj) {\n  if (isNull(obj)) return false;\n  return obj instanceof Text;\n};\n\n/**\n * 验证一个对象是否为Object\n * @method isObject\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isObject(obj) {\n  if (isNull(obj)) return false;\n  let type = getType(obj);\n  return type === 'Object' || type === 'Array';\n};\n\n/**\n * 验证一个对象是否为Array或伪Array\n * @method isArray\n * @param  {Object}  obj 要验证的对象\n * @return {Boolean}     结果\n * @static\n */\nexport function isArray(obj) {\n  if (isNull(obj)) return false;\n  var v1 = getType(obj) === 'Array';\n  var v2 = obj instanceof Array;\n  var v3 = !isString(obj) && isNumber(obj.length) && isFunction(obj.splice);\n  var v4 = !isString(obj) && isNumber(obj.length) && obj[0];\n  return v1 || v2 || v3 || v4;\n};\n\n/**\n * 验证是不是一个日期对象\n * @method isDate\n * @param {Object} val   要检查的对象\n * @return {Boolean}           结果\n * @static\n */\nexport function isDate(val) {\n  if (isNull(val)) return false;\n  return val instanceof Date;\n};\n\n/**\n * 验证是不是一个正则对象\n * @method isDate\n * @param {Object} val   要检查的对象\n * @return {Boolean}           结果\n * @static\n */\nexport function isRegexp(val) {\n  return val instanceof RegExp;\n};\n\n/**\n * 转换为数组\n * @method toArray\n * @param {Array|Object} array 伪数组\n * @return {Array} 转换结果数组\n * @static\n */\nexport function toArray(array) {\n  if (isNull(array)) return [];\n  return Array.prototype.slice.call(array);\n};\n\n/**\n * 转为日期格式\n * @method toDate\n * @param {Number|String} val 日期字符串或整型数值\n * @return {Date} 日期对象\n * @static\n */\nexport function toDate(val) {\n  var self = this;\n  if (self.isNumber(val))\n    return new Date(val);\n  else if (self.isString(val))\n    return new Date(self.replace(self.replace(val, '-', '/'), 'T', ' '));\n  else if (self.isDate(val))\n    return val;\n  else\n    return null;\n};\n\n/**\n * 遍历一个对像或数组\n * @method each\n * @param  {Object or Array}   obj  要遍历的数组或对象\n * @param  {Function} fn            处理函数\n * @return {void}                   无返回值\n * @static\n */\nexport function each(list, handler, scope) {\n  if (isNull(list) || isNull(handler)) return;\n  if (isArray(list)) {\n    var listLength = list.length;\n    for (var i = 0; i < listLength; i++) {\n      var rs = handler.call(scope || list[i], i, list[i]);\n      if (!isNull(rs)) return rs;\n    }\n  } else {\n    for (var key in list) {\n      var rs = handler.call(scope || list[key], key, list[key]);\n      if (!isNull(rs)) return rs;\n    }\n  }\n};\n\n/**\n * 格式化日期\n * @method formatDate\n * @param {Date|String|Number} date 日期\n * @param {String} format 格式化字符串\n * @param {object} dict 反译字典\n * @return {String} 格式化结果\n * @static\n */\nexport function formatDate(date, format, dict) {\n  if (isNull(format) || isNull(date)) return date;\n  date = toDate(date);\n  dict = dict || {};\n  var placeholder = {\n    \"M+\": date.getMonth() + 1, //month\n    \"d+\": date.getDate(), //day\n    \"h+\": date.getHours(), //hour\n    \"m+\": date.getMinutes(), //minute\n    \"s+\": date.getSeconds(), //second\n    \"w+\": date.getDay(), //week\n    \"q+\": Math.floor((date.getMonth() + 3) / 3), //quarter\n    \"S\": date.getMilliseconds() //millisecond\n  }\n  if (/(y+)/.test(format)) {\n    format = format.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  }\n  for (var key in placeholder) {\n    if (new RegExp(\"(\" + key + \")\").test(format)) {\n      var value = placeholder[key];\n      value = dict[value] || value;\n      format = format.replace(RegExp.$1, RegExp.$1.length == 1\n        ? value : (\"00\" + value).substr((\"\" + value).length));\n    }\n  }\n  return format;\n};\n\n/**\n * 拷贝对象\n * @method copy\n * @param {Object} src 源对象\n * @param {Object} dst 目标对象\n * @static\n */\nexport function copy(src, dst, igonres) {\n  dst = dst || (isArray(src) ? [] : {});\n  each(src, function (key) {\n    if (igonres && igonres.indexOf(key) > -1) return;\n    delete dst[key];\n    if (Object.getOwnPropertyDescriptor) {\n      try {\n        Object.defineProperty(dst, key,\n          Object.getOwnPropertyDescriptor(src, key));\n      } catch (ex) {\n        dst[key] = src[key];\n      }\n    } else {\n      dst[key] = src[key];\n    }\n  })\n  return dst;\n};\n\n/**\n * 深度克隆对象\n * @method clone\n * @param {Object} src 源对象\n * @return {Object} 新对象\n * @static\n */\nexport function clone(src, igonres) {\n  if (isNull(src) ||\n    isString(src) ||\n    isNumber(src) ||\n    isBoolean(src) ||\n    isDate(src)) {\n    return src;\n  }\n  var objClone = src;\n  try {\n    objClone = new src.constructor();\n  } catch (ex) { }\n  each(src, function (key, value) {\n    if (objClone[key] != value && !contains(igonres, key)) {\n      if (isObject(value)) {\n        objClone[key] = clone(value, igonres);\n      } else {\n        objClone[key] = value;\n      }\n    }\n  }, this);\n  ['toString', 'valueOf'].forEach(function (key) {\n    if (contains(igonres, key)) return;\n    defineFreezeProp(objClone, key, src[key]);\n  }, this);\n  return objClone;\n};\n\n/**\n * 合并对象\n * @method mix\n * @return 合并后的对象\n * @param {Object} dst 目标对象\n * @param {Object} src 源对象\n * @param {Array} igonres 忽略的属性名,\n * @param {Number} mode 模式\n */\nexport function mix(dst, src, igonres, mode, igonreNull) {\n  //根据模式来判断，默认是Obj to Obj的  \n  if (mode) {\n    switch (mode) {\n      case 1: // proto to proto  \n        return mix(dst.prototype, src.prototype, igonres, 0);\n      case 2: // object to object and proto to proto  \n        mix(dst.prototype, src.prototype, igonres, 0);\n        break; // pass through  \n      case 3: // proto to static  \n        return mix(dst, src.prototype, igonres, 0);\n      case 4: // static to proto  \n        return mix(dst.prototype, src, igonres, 0);\n      default: // object to object is what happens below  \n    }\n  }\n  //---\n  src = src || {};\n  dst = dst || (isArray(src) ? [] : {});\n  keys(src).forEach(function (key) {\n    if (contains(igonres, key)) return;\n    if (igonreNull && isNull(src[key])) return;\n    if (isObject(src[key]) &&\n      (src[key].constructor == Object ||\n        src[key].constructor == Array ||\n        src[key].constructor == null)) {\n      dst[key] = mix(dst[key], src[key], igonres, 0, igonreNull);\n    } else {\n      dst[key] = src[key];\n    }\n  }, this);\n  return dst;\n};\n\n/**\n * 定义不可遍历的属性\n **/\nexport function defineFreezeProp(obj, name, value) {\n  try {\n    Object.defineProperty(obj, name, {\n      value: value,\n      enumerable: false,\n      configurable: true, //能不能重写定义\n      writable: false //能不能用「赋值」运算更改\n    });\n  } catch (err) {\n    obj[name] = value;\n  }\n};\n\n/**\n * 获取所有 key \n */\nexport function keys(obj) {\n  if (Object.keys) return Object.keys(obj);\n  var keys = [];\n  each(obj, function (key) {\n    keys.push(key);\n  });\n  return keys;\n};\n\n/**\n * 创建一个对象\n */\nexport function create(proto, props) {\n  if (Object.create) return Object.create(proto, props);\n  function Cotr() { };\n  Cotr.prototype = proto;\n  var obj = new Cotr();\n  if (props) copy(props, obj);\n  return obj;\n};\n\n/**\n * 设置 proto\n * 在不支持 setPrototypeOf 也不支持 __proto__ 的浏览器\n * 中，会采用 copy 方式\n */\nexport function setPrototypeOf(obj, proto) {\n  if (Object.setPrototypeOf) {\n    return Object.setPrototypeOf(obj, proto || create(null));\n  } else {\n    if (!('__proto__' in Object)) copy(proto, obj);\n    obj.__proto__ = proto;\n  }\n};\n\n/**\n * 获取 proto\n */\nexport function getPrototypeOf(obj) {\n  if (obj.__proto__) return obj.__proto__;\n  if (Object.getPrototypeOf) return Object.getPrototypeOf(obj);\n  if (obj.constructor) return obj.constructor.prototype;\n};\n\n/**\n * 是否深度相等\n */\nexport function deepEqual(a, b) {\n  if (a === b) return true;\n  if (!isObject(a) || !isObject(b)) return false;\n  var aKeys = keys(a);\n  var bKeys = keys(b);\n  if (aKeys.length !== bKeys.length) return false;\n  var allKeys = aKeys.concat(bKeys);\n  var checkedMap = create(null);\n  var result = true;\n  each(allKeys, function (i, key) {\n    if (checkedMap[key]) return;\n    if (!deepEqual(a[key], b[key])) result = false;\n    checkedMap[key] = true;\n  }, this);\n  return result;\n};\n\n/**\n * 从一个数值循环到别一个数\n * @param {number} fromNum 开始数值\n * @param {Number} toNum 结束数值\n * @param {Number} step 步长值\n * @param {function} handler 执行函数\n * @returns {void} 无返回\n */\nexport function fromTo(fromNum, toNum, step, handler) {\n  if (!handler) handler = [step, step = handler][0];\n  step = Math.abs(step || 1);\n  if (fromNum < toNum) {\n    for (var i = fromNum; i <= toNum; i += step) handler(i);\n  } else {\n    for (var i = fromNum; i >= toNum; i -= step) handler(i);\n  }\n};\n\n/**\n * 生成一个Guid\n * @method newGuid\n * @return {String} GUID字符串\n * @static\n */\nexport function newGuid() {\n  function s4() {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n  };\n  return (s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" +\n    s4() + \"-\" + s4() + s4() + s4());\n};\n\n/**\n * 对象变换\n **/\nexport function map(list, fn) {\n  var buffer = isArray(list) ? [] : {};\n  each(list, function (name, value) {\n    buffer[name] = fn(name, value);\n  });\n  return buffer;\n};\n\n/**\n * 通过路径设置属性值\n */\nexport function setByPath(obj, path, value) {\n  if (isNull(obj) || isNull(path) || path === '') {\n    return;\n  }\n  if (!isArray(path)) {\n    path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n  }\n  each(path, function (index, name) {\n    if (isNull(name) || name.length < 1) return;\n    if (index === path.length - 1) {\n      obj[name] = value;\n    } else {\n      obj[name] = obj[name] || {};\n      obj = obj[name];\n    }\n  }, this);\n};\n\n/**\n * 通过路径获取属性值\n */\nexport function getByPath(obj, path) {\n  if (isNull(obj) || isNull(path) || path === '') {\n    return obj;\n  }\n  if (!isArray(path)) {\n    path = path.replace(/\\[/, '.').replace(/\\]/, '.').split('.');\n  }\n  each(path, function (index, name) {\n    if (isNull(name) || name.length < 1) return;\n    if (!isNull(obj)) obj = obj[name];\n  }, this);\n  return obj;\n};\n\n/**\n * 数组去重\n **/\nexport function unique(array) {\n  if (isNull(array)) return array;\n  var newArray = [];\n  each(array, function (i, value) {\n    if (newArray.indexOf(value) > -1) return;\n    newArray.push(value);\n  });\n  return newArray;\n};\n\n/**\n * 解析 function 的参数列表\n **/\nexport function getFunctionArgumentNames(fn) {\n  if (!fn) return [];\n  var src = fn.toString();\n  var parts = src.split(')')[0].split('=>')[0].split('(');\n  return (parts[1] || parts[0]).split(',').map(function (name) {\n    return name.trim();\n  }).filter(function (name) {\n    return name != 'function';\n  });\n};\n\n/**\n * 缩短字符串\n */\nexport function short(str, maxLength) {\n  if (!str) return str;\n  maxLength = maxLength || 40;\n  var strLength = str.length;\n  var trimLength = maxLength / 2;\n  return strLength > maxLength ?\n    str.substr(0, trimLength) + '...' + str.substr(strLength - trimLength) :\n    str;\n};\n\n/**\n * 首字母大写\n */\nexport function firstUpper(str) {\n  if (isNull(str)) return;\n  return str.substring(0, 1).toUpperCase() + str.substring(1);\n};\n\n/**\n * 编码正则字符串\n */\nexport function escapeRegExp(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\n/**\n * 解析字符串为 dom \n * @param {string} str 字符串\n * @returns {HTMLNode} 解析后的 DOM \n */\nexport function parseDom(str) {\n  window._NTILS_PARSE_DOM_ = window._NTILS_PARSE_DOM_ ||\n    document.createElement('div');\n  window._NTILS_PARSE_DOM_.innerHTML = trim(str);\n  var firstNode = window._NTILS_PARSE_DOM_.childNodes[0];\n  //先 clone 一份再通过 innerHTML 清空\n  //否则 IE9 下，清空时会导不通过返回的 DOM 没有子结点\n  if (firstNode) firstNode = firstNode.cloneNode(true);\n  window._NTILS_PARSE_DOM_.innerHTML = '';\n  return firstNode;\n};\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js"],"sourceRoot":""}